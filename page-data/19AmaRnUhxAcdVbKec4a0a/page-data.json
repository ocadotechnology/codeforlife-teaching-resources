{"componentChunkName":"component---src-templates-worksheet-js","path":"/19AmaRnUhxAcdVbKec4a0a","result":{"data":{"contentfulWorksheet":{"worksheetTitle":"Student Challenge 3","resourceSection":null,"content":[{"__typename":"ContentfulFullWidthText","heading":{"name":"Introduction"},"content":{"content":"In the last challenge, you found out how to avoid obstacles on the map and how to pick up any artefacts you encountered. You are now familiar with your equipment and have managed to unlock the gateway to the first time checkpoint. \n"}},{"__typename":"Contentful2ColumnLayout","heading":{"name":"Direction Control"},"leftColumn":{"leftColumn":"Your avatar has been wandering the map aimlessly up to now. In this challenge, you are going to try to pick up five artefacts scattered accross the sand and examine what type of artefact you have found.\n\nNow you have got this far, you can use some more built-in code to help you move around and navigate.\n\nThe new subroutine, `world_state.scan_nearby()` (fig. 1) returns a list of nearby artefacts. The first artefact in the list is the closest.\n\nThere is also a new action: `MoveTowardsAction()`. You need to send this action an artefact to head towards.\n\nStart with this code and watch to see what is going on. \n\nOnce you are satisfied that it is working, add code so that you pick up any artefacts you find (fig. 2) and then head off to look for more.\n\nRemember that you can use this code to check for artefacts and pick them up. "},"rightColumn":{"rightColumn":"```python\ndef next_turn(world_state, avatar_state):\n    # scan_nearby() returns a list of the nearest artefacts\n    nearby = world_state.scan_nearby(avatar_state.location)\n\n    # Head towards the nearest artefact\n    nearest = nearby[0]\n\n    return MoveTowardsAction(nearest)\n```\n*fig. 1*\n\n```python\ncurrent_cell = world_state.get_cell(avatar_state.location)\nif current_cell.has_artefact():\n    action = PickupAction()\n\nreturn action\n```\n*fig. 2*\n\n> Your code must return an action. It can be a `MoveAction`, `PickupAction` or a `MoveTowardsAction`."}},{"__typename":"Contentful2ColumnLayout","heading":{"name":"Pick up Five Artefacts"},"leftColumn":{"leftColumn":"Now you have more control over your avatar’s direction, can you pick up five artefacts? `my_backpack` is a list of artefacts. Try it using this command:\n\n```python\nmy_backpack = avatar_state.backpack\nprint(\"I have\", len(my_backpack), \"things in my backpack.\")\n```\n\nThis code lets you look inside your backpack:\n\n```python\nmy_backpack = avatar_state.backpack\nartefact_count = len(my_backpack)\nprint(“Picked up”, artefact_count, “artefacts”)\n```\n\nThink of your backpack as a list of items. Writing `len(my_backpack)` gets the length of your backpack, i.e. how many items are in it.\n\n```python\nmy_backpack = avatar_state.backpack\ncount = len(my_backpack)\nprint(\"I have\", count, \"things in my backpack.\")\n```\n\n__Final Task__\nAdd some code that outputs how many items you have in your backpack and prints out \"I have five artefacts, I win!\" when you have picked up five.\n"},"rightColumn":{"rightColumn":"\n> __IMPORTANT__\n> \n> Kurono uses subroutines. If you create a variable inside a subroutine, it is __local__ so other subroutines cannot access it directly. Its value is also reset every time you call the subroutine. The code below (fig. 3) will not work! It will always print \"There are 1 things in my backpack\", no matter how many artefacts you have picked up.\n\n```python\ndef next_turn(world_state, avatar_state):\n    count = 0 # This is a local variable so it resets each call\n    avatar_location = avatar_state.location\n    current_cell = world_state.get_cell(avatar_location)\n\n    if current_cell.has_artefact():\n        count = count + 1\n        print(\"I have\", count, \"things in my backpack\")\n        action = PickupAction()\n    else:\n        nearby = world_state.scan_nearby(avatar_location)\n        nearest = nearby[0]\n        action = MoveTowardsAction(nearest)\n\n    return action\n```\n*fig. 3*\n"}},{"__typename":"ContentfulFullWidthText","heading":{"name":"Types of Artefacts"},"content":{"content":"You might have noticed that there are different types of artefacts. Later on, you will need to check their type before picking them. For now, just make sure you know what you have.\n\nIn this challenge, there are only key and chest artefacts. You can find out what you have in your backpack by looking at the `artefact.type` for an item in your backpack.\n\nThis code outputs the artefact type of the first artefact in your backpack.\n\n__NB:__ This code will crash if your backpack is empty!\n\n```python\nartefact = my_backpack[0]\nprint(\"The first one is\", artefact.type)\n```\n\n__Challenge part 1__: Expand your program so that it outputs the types of all artefacts in your backpack when you have picked up five.\n\n__Challenge part 2__: The artefacts on this level are key or chest only. Expand your program so that it outputs a summary of what you have in your backpack. E.g. \n\n*I have 3 keys and 2 chests.*"}},{"__typename":"ContentfulFullWidthText","heading":{"name":"Summary"},"content":{"content":"__Well done!__ You are really getting to grips with controlling your avatar now. You have found out how to control direction, how to examine your backpack and how to find out about the artefacts you are holding.\n\nYou have also managed to find two different types of valuable artefacts to return to the museum with your class. To be continued..."}}]}},"pageContext":{"contentful_id":"19AmaRnUhxAcdVbKec4a0a"}}}