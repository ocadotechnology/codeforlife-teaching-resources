{"componentChunkName":"component---src-templates-worksheet-js","path":"/6uMm9lNhTF9YsoRS2SHwd","result":{"data":{"contentfulWorksheet":{"worksheetTitle":"Student Challenge 1","resourceSection":"Intermediate Python","content":[{"__typename":"ContentfulFullWidthText","heading":null,"content":{"content":"Having activated the Kurono time machine, it's down to you and your classmates to work out how to use it! Read through the instructions below that show you how to move around the map. "}},{"__typename":"Contentful2ColumnLayout","heading":{"name":"1. Introduction"},"leftColumn":{"leftColumn":"Kurono is a game which helps you develop your Python programming skills. You write code to move an avatar around a grid world, avoiding obstacles and other players and picking up objects you find on the map.\n\nKurono uses a turn-based approach. This is a bit like a board game where you can’t move unless it’s your turn. You need to write code to decide what move to make in a subroutine called `next_turn()` and the game itself calls this subroutine when it’s your turn to move. Turns happen quite quickly though, so you don’t need to wait for long.\n\nYour `next_turn()` subroutine is sent the `world_state` and `avatar_state` objects which you will use in later worksheets to give you access to what is on the map and where you are on the grid.\nYou can make use of the following built-in constants to move in a fixed direction:\n\n- `direction.NORTH` \n- `direction.EAST`\n- `direction.SOUTH`\n- `direction.WEST`\n\n\nNotice that the map includes a compass to show you where North is. See Figure 1."},"rightColumn":{"rightColumn":"![Kurono game screen](//images.ctfassets.net/x5ignlfoflka/3Tl6gpFPsFmUdNbfTgANI0/da4f6ae00bd2324489cc4fb1191e0d88/Screenshot_2020-10-14_at_14.45.32.png)\nFig. 1 - The game interface\n\n> ### Subroutine\n> A subroutine is a section of code that is separate from the main code and needs to be called in order to run.\n> You use subroutines in Python all the time. `print()` and `input()` are both subroutines but they are part of Python. You should already know how to write your own subroutines but if you don’t, just make sure that all the code you write is inside the `def` block. See the example in Figure 1.\n> The code on the right stores a northward move in the action variable and then returns it so the game can action it."}},{"__typename":"Contentful2ColumnLayout","heading":{"name":"2. Change direction"},"leftColumn":{"leftColumn":"When you first open Kurono, you will notice that the code in Figure 2 is already there. If you leave that code running, you will eventually get stuck on an obstacle block or the edge of the map. Try changing the code so that your avatar moves in a different direction instead. Remember to use one of the direction constants shown previously."},"rightColumn":{"rightColumn":"```\ndef next_turn(world_state, avatar_state):\n    new_dir = direction.NORTH\n    # Your code goes here  \n    action = MoveAction(new_dir)\n    return action\n``` \nFig. 2 - Default code"}},{"__typename":"Contentful2ColumnLayout","heading":{"name":"3. Move in all directions"},"leftColumn":{"leftColumn":"Now, can you write some code that moves your avatar in a **random direction** instead of just one fixed direction? \n\nDon't forget to add `import random` at the top of your program as you would normally do.\n\nYou will also need to use an `if...elif...else` statement to help you here."},"rightColumn":{"rightColumn":"> ### Need a hint?\n> You need to get Python to give you a random number between 1 and 4 and then use this to choose a direction to move in.\n> The code on the right prints a random number to the **console log** and then moves North. Try it to work out what the numbers in the brackets are for and then finish the code.\n\n```\nimport random\n\ndef next_turn(world_state, avatar_state):\n    # You might need to change this \n    number = random.randint(1,6) \n    print(\"The random number was\", number)\n\n    # Add some code to set new_dir to the next \n    # direction to move. The next line just \n    # sets it to move North for now\n    new_dir = direction.NORTH\n    action = MoveAction(new_dir)\n    return action\n```"}},{"__typename":"ContentfulFullWidthText","heading":{"name":"4. Investigate location"},"content":{"content":"Now your avatar is randomly wandering the map, they are likely bumping into obstacles and might be getting stuck for a few turns. In this next task, you will find out if you have collided with something.\n\nStart with your solution to task 3.\n\nAdd the line of code below before the return.\n\n`print(avatar_state.location)`\n\nLook at the console log to work out what this code does. What do you think those numbers represent?\n\nThe Kurono grid world uses x-y coordinates for each square (or cell) on the grid. The code you added tells you the x-y coordinates of the cell your avatar is in.\n\nYou can check if you can move onto a cell before you try to move using this code. Add it before the return.\n\n```\nnew_dir = direction.NORTH # Let’s assume you were going to move North\nnext_cell = avatar_state.location + new_dir # Get the cell you would move onto\nprint(\"The coordinates of the next cell are\", next_cell))\n# Ask Kurono if you can move to that cell\nprint(\"Can I move onto this cell?\", world_state.can_move_to(next_cell))\n```\n\nOnce you understand what this code is doing, print out a message every time you are unable to make a move because that cell is occupied."}},{"__typename":"ContentfulFullWidthText","heading":{"name":"Summary"},"content":{"content":"Well done! You have learned about the basics of using Kurono and moving your avatar around the game board. In the next session, you will find out how to avoid obstacles and how to pick things up that you found on the map.\n\nYou have investigated:\n- subroutines\n- generating random numbers\n- complex selection statements with if..elif...else\n- some properties of the game board to find out where you are"}}]}},"pageContext":{"contentful_id":"6uMm9lNhTF9YsoRS2SHwd"}}}